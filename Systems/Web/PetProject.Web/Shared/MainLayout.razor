@inherits LayoutComponentBase

@inject IConfigurationService configuration

<MudThemeProvider @bind-IsDarkMode="@(_darkMode)"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Style="@($"background:{Colors.Green.Lighten2};")">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@(_darkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" @onclick="@DarkModeSwitch" Color="Color.Inherit" Edge="Edge.End" />
        <UserMenu />
    </MudAppBar>
    <MudDrawer @bind-Open="(_navigationMenuVisible)" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<MudScrollToTop>
    <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp" />
</MudScrollToTop>

<MudText Style="@($"background:{Colors.Green.Lighten2};width:100%;height:35px;position:absolute;bottom:0")">
    <span style="margin-left:45%;color:whitesmoke;font-size:x-large;">
        @copyRight
    </span>
</MudText>

@code {

    private bool _darkMode = false;
    private bool _navigationMenuVisible = false;
    private string copyRight = "© Экзюпери, 2022‐2023";

    protected override async Task OnInitializedAsync()
    {
        _darkMode = await configuration.GetDarkMode();
        _navigationMenuVisible = await configuration.GetNavigationMenuVisible();
    }

    async void DarkModeSwitch()
    {
        _darkMode = !_darkMode;
        await configuration.SetDarkMode(_darkMode);
    }

    async void DrawerToggle()
    {
        _navigationMenuVisible = !_navigationMenuVisible;
        await configuration.SetNavigationMenuVisible(_navigationMenuVisible);
    }
}