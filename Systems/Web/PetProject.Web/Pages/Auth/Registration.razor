@page "/registration"
@layout SimpleLayout

@using System.ComponentModel.DataAnnotations
@using PetProject.Web.Pages.Auth.Models
@using PetProject.Web.Pages.Auth.Models.Registration
@using PetProject.Web.Pages.Auth.Services

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<MudGrid Justify="Justify.Center" Class="pa-10">
    <MudItem xs="7" sm="4">
        <MudPaper Class="pa-4">           
                
                <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-3" >Регистрация</MudText>

                <MudAlert Severity="Severity.Error" Class="@(ShowErrors ? "mb-3 d-block" : "d-none")">
                    @Error
                </MudAlert>

                <MudForm Model="model" @ref="form" Validation="@(modelValidator.ValidateValue)">
                    <MudTextField T="string"
                                    @bind-Value="model.Email" For="@(() => model.Email)"
                                    Label="Адрес электронной почты" 
                                    Required="true" 
                                    RequiredError="Адрес электронной почты обязателен!"
                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "Неправильный адрес электронной почты"})" />
                    
                    <MudTextField @bind-Value="model.Nickname" For="@(() => model.Nickname)"
                                    Label="Имя пользователя" 
                                    Required="true"
                              RequiredError="Имя пользователя обязательно!" />
                    <MudTextField @bind-Value="model.Password" For="@(() => model.Password)"
                                    Label="Пароль" 
                                    InputType="@PasswordInput"
                                    Adornment="Adornment.End"
                                    AdornmentIcon="@PasswordInputIcon"
                                    Required="true"
                                    RequiredError="Пароль обязателен!"
                                    OnAdornmentClick="TogglePasswordVisibility" />

                    <div Class="d-flex justify-space-between align-center">
                        <MudLink Href="/registration">Вход</MudLink>


                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Style="margin-top:25px;"
                                   Size="Size.Large"
                                   ButtonType="MudBlazor.ButtonType.Button"
                                   OnClick="@((e) => Registr())">Зарегистрироваться</MudButton>
                    </div>
                </MudForm>   
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    MudForm form = default!;

    
    private RegistrationModel model = new RegistrationModel();

    RegistrationModelValidator modelValidator = new RegistrationModelValidator(); 

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private bool ShowErrors;
    private string? Error;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task Registr()
    {
        ShowErrors = false;
        Error = "";
        await form.Validate();
        var result = await AuthService.Registration(model);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}
