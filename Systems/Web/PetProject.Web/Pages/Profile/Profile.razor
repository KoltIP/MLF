@page "/profile"
@layout MainLayout

@using PetProject.Web.Pages.Profile.Models
@using PetProject.Web.Pages.Profile.Dialog
@using System.ComponentModel.DataAnnotations
@using PetProject.Web.Pages.Profile.Services

@inject IProfileService profileService
@inject IDialogService DialogService

@attribute [Authorize]

<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Your profile</MudText>
    <MudGrid Spacing="6" Class="mt-16">
        <MudItem xs="7">
            <MudText Typo="Typo.h5" GutterBottom="true" Align="Align.Center">Your data</MudText>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField T="string"  Label="Email"  Text="@email"/>
                    <MudTooltip Text="Change your email">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => ChangeEmail())"
                        /> 
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" Label="Name"  Text="@name"/>
                    <MudTooltip Text="Change your name">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => ChangeName())"
                        />
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" Label="Surname"  Text="@surname"/>
                     <MudTooltip Text="Change your surname">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => ChangeSurname())"
                        />
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" Label="Patronymic"  Text="@patronymic"/>
                     <MudTooltip Text="Change your patronymic">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => ChangePatronymic())"
                        />
                    </MudTooltip>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" Label="Nickname"  Text="@nickname"/>
                     <MudTooltip Text="Change your nickname">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => ChangeNickname())"
                        />
                    </MudTooltip>
                </MudItem>
                 <MudButton Variant="Variant.Text"
                           Color="Color.Primary"
                           Size="Size.Large"
                           ButtonType="MudBlazor.ButtonType.Button"
                            OnClick="@((e) => ChangePassword())">
                           Change password
                </MudButton>
               @* <MudItem xs="12">
                    <MudTextField T="string" Label="Mobile number" />@mobileNumber
                </MudItem>   
                <MudItem xs="12">
                    <MudTextField T="string" Label="Age" />@age
                </MudItem>  *@ 
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Tertiary" Size="Size.Large" Class="mt-8">Change</MudButton>
                </MudItem>
                <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" 
                        Variant="Variant.Outlined" 
                        Color="Color.Primary" 
                        Size="Size.Medium" 
                        OnClick="@((e) => DeleteProfile())"/> 

            </MudGrid>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{

    private ProfileModel profileModel = new ProfileModel();

    private string name;
    private string surname;
    private string patronymic;
    private string nickname;
    private string email;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
        catch(Exception ex)
        {
            throw new Exception(ex.Message);
        }        
    }

    private async Task DeleteProfile()
    {
        await profileService.DeleteProfile();        
    }

    private async Task ChangeName()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<NameDialog>("Change Name", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }

    private async Task ChangeSurname()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<SurnameDialog>("Change Surname", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }

    private async Task ChangePatronymic()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<PatronymicDialog>("Change Patronymic", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }

    private async Task ChangeNickname()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<NicknameDialog>("Change Nickname, parameters, options");
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }


    private async Task ChangeEmail()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<EmailDialog>("Change Email", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }

    private async Task ChangePassword()
    {
        var parameters = new DialogParameters {};
        var options = new MudBlazor.DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<PasswordDialog>("Change Password", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            profileModel = await profileService.GetProfile();
            name = profileModel.Name;
            surname = profileModel.Surname;
            patronymic = profileModel.Patronymic;
            nickname = profileModel.NickName;
            email = profileModel.Email;
        }
    }
}